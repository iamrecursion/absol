// Need to update grammar to reflect the above
name : simple_test;

version : 0.0.1a;

using : {
    floating-point,
    integer,
    nondigit,
    digit
};

truths : {
    {int n <= <integer>},
    {float n <= <floating-point>}
};

language : {

<<simple_test>> ::= <statement> ;

// Semantics only required for expressions containing terminals
<number> ::= <integer> | <floating-point> ; // from imports, implicit semantics

<arith-expr> ::= <number> | <arith-op> "\"";

<arith-op> ::=
    <arith-expr> "+" "\"" <arith-expr> --> {
        num n : {n = n1 + n2}() :
            {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
    } |
    <arith-expr> "-" <arith-expr> --> {
        num n : {n = n1 - n2}() :
            {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
    } |
    <arith-expr> "*" <arith-expr> --> {
        num n : {n = n1 * n2}() :
            {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
    } |
    <arith-expr> "/" <arith-expr> --> {
        num n : {n = n1 / n2}() :
            {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
    } |
    <arith-expr> "^" <arith-expr> --> {
        num n : {n = n1 ^ n2}() :
            {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]} |
        num n : {n = n1 * n1}(n2 == 2) :
            {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
    };

<identifier> ::= <nondigit> { <integer> | <nondigit> };

<statement> ::= <arith-expr> | <assignment> ;

// Defaults to returning the assigned value unless suppressed with 'none'
<assignment> ::= <identifier> "=" <arith-expr> --> {
    none e <-- <identifier>[0] : <arith-expr>[0]
};

<access-test> ::= "call" "(" <identifier> ")" --> {
    int e.<identifier>[0].<identifier>[1]
};

<special-test> ::= "func" "(" <identifier> ")" ";" --> {
    any funcall(
        e.<identifier>[0].<statement>[0],
        <param-list>[0],
        e.<identifier>[0].<param-decl-list>[0]
        )
};

(* These defined for reference only. *)
// <digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
// <natural> ::= <digit> { <digit> } ;
// <integer> ::= <natural> | "-" <natural> ;
// <floating-point> ::= [ "+" | "-" ] <natural> [ "." <natural> ] ;

};
