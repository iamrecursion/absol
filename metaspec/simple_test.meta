
name : simple_test;

version : 0.0.1a;

using : {
    floating-point,
    integer,
    nondigit,
    digit
};

// truths : {
//     {int n <= <integer>}
//     {float n <= <floating-point>}
// };

// language : {

// <<simple_test>> ::= <statement> ;

// // Semantics only required for expressions containing terminals
// <number> ::= <integer> | <floating-point> ; // from imports, implicit semantics

// <arith-expr> ::= <number> | <arith-op> ;

// <arith-op> ::= 
//     <arith-expr> "+" <arith-expr> --> {
//         num n : {n = n1 + n2}() : 
//             {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
//     } |
//     <arith-expr> "-" <arith-expr> --> {
//         num n : {n = n1 - n2}() : 
//             {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
//     } |
//     <arith-expr> "*" <arith-expr> --> {
//         num n : {n = n1 * n2}() : 
//             {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
//     } |
//     <arith-expr> "/" <arith-expr> --> {
//         num n : {n = n1 / n2}() : 
//             {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
//     } |
//     <arith-expr> "^" <arith-expr> --> {
//         num n : {n = n1 ^ n2}() : 
//             {num n1 <= <arith-expr>[0]}, {num n2 <= <arith-expr>[1]}
//     };

// <identifier> ::= <nondigit> {<integer> | } // TODO
    
// <statement> ::= <arith-expr> | <assignment> ;

// // Defaults to returning the assigned value unless suppressed with 'none'
// // May need new syntax support
// <assignment> ::= <identifier> "=" <arith-expr> --> {
//     none e <-- <identifier>[0] : <arith-expr>[0]
// };

// (* These defined for reference only. *)
// // <digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;
// // <natural> ::= <digit> { <digit> } ;
// // <integer> ::= <natural> | "-" <natural> ;
// // <floating-point> ::= [ "+" | "-" ] <natural> [ "." <natural> ] ;

// };
